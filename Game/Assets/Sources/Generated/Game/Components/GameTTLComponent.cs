//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public TTL tTL { get { return (TTL)GetComponent(GameComponentsLookup.TTL); } }
    public bool hasTTL { get { return HasComponent(GameComponentsLookup.TTL); } }

    public void AddTTL(float newSeconds) {
        var index = GameComponentsLookup.TTL;
        var component = (TTL)CreateComponent(index, typeof(TTL));
        component.seconds = newSeconds;
        AddComponent(index, component);
    }

    public void ReplaceTTL(float newSeconds) {
        var index = GameComponentsLookup.TTL;
        var component = (TTL)CreateComponent(index, typeof(TTL));
        component.seconds = newSeconds;
        ReplaceComponent(index, component);
    }

    public void RemoveTTL() {
        RemoveComponent(GameComponentsLookup.TTL);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTTL;

    public static Entitas.IMatcher<GameEntity> TTL {
        get {
            if (_matcherTTL == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.TTL);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTTL = matcher;
            }

            return _matcherTTL;
        }
    }
}
